stages:
  - 'lint'
  - 'test'
  - 'deploy'
  - 'local_docs'

.test:
  before_script:
    - python -V
    - pip -V
    - python -m venv venv
    - . venv/bin/activate
    - pip install wheel
    - pip install pytest
    - pip install coverage
      # Needed for opencv to work
    - apt-get update
    - apt-get install -y ffmpeg libsm6 libxext6
    # Install xdl requirements
    # Install Chempiler, SerialLabware and ChemputerAPI for simulations
    - pip install git+https://$CHEMPILER_USER:$CHEMPILER_PW@gitlab.com/croningroup/chemputer/chempiler.git
    - pip install git+https://$SERIALLABWARE_USER:$SERIALLABWARE_PW@gitlab.com/croningroup/chemputer/seriallabware.git
    - pip install git+https://$CHEMPUTERAPI_USER:$CHEMPUTERAPI_PW@gitlab.com/croningroup/chemputer/chemputerapi.git
    - pip install git+https://github.com/croningp/commanduino.git
    - pip install git+https://$COMMANDUINOLABWARE_USER:$COMMANDUINOLABWARE_PW@gitlab.com/croningroup/chemputer/commanduinolabware.git
    # Try to install from tagged commit or branch, if that fails use remote HEAD
    - |-
      uri="git+https://${CHEMPUTERXDL_USER}:${CHEMPUTERXDL_PW}@gitlab.com/croningroup/chemputer/chemputerxdl.git"
      ref=${CI_COMMIT_BRANCH:-${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}};
      if [ -n "${ref}" ]; then
          echo "ref is ${ref}";
          pip install ${uri}@merge+$ref \
          || pip install ${uri}@$ref \
          || pip install ${uri}
      else
          pip install ${uri}
      fi;
    # Install xdl
    - pip install .
    - pip freeze

  script:
    - coverage run --source=xdl --omit="xdl/blueprints*","xdl/utils/schema.py","xdl/execution/client.py","xdl/steps/templates/generate_doc.py" -m pytest tests -m "unit or chemputer" -x -rf
    - coverage report -m --fail-under=70

test-python:3.7:
  extends: '.test'
  stage: 'test'
  image: 'python:3.7'
  except:
    - DBD/test_doc_parsing_CI_#

test-python:3.8:
  extends: '.test'
  stage: 'test'
  image: 'python:3.8'
  except:
    - DBD/test_doc_parsing_CI_#

test-python:3.9:
  extends: '.test'
  stage: 'test'
  image: 'python:3.9'
  except:
    - DBD/test_doc_parsing_CI_#

lint:
  stage: 'lint'
  image: 'python:3.8'

  variables:
    FLAKE8_EXCLUDE: xdl/execution/tracking.py,xdl/execution/utils.py,xdl/utils/schema.py,*__init__.py,venv
    FLAKE8_MAX_LINE_LENGTH: 80
    FLAKE8_IGNORE: E302,W503
    FLAKE8_PER_FILE_IGNORE: tests/*:T001

  script:
    - pip install flake8
    - pip install flake8-print
    - flake8 . --per-file-ignores=$FLAKE8_PER_FILE_IGNORE

  except:
    - DBD/test_doc_parsing_CI_#339
pages:
  stage: 'deploy'
  image: 'python:3.8'
  script:
    - pip install sphinx==3.5.4
    - pip install sphinx_rtd_theme
    - pip install "Jinja2<3.1"  # https://github.com/sphinx-doc/sphinx/issues/10291
    - pip install .
    - cd documentation
    - make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master

local_docs:
  stage: 'local_docs'
  image: 'python:3.8'
  extends: '.test'
  script:
    - cd documentation
    - python generate_standard_docs.py
  except:
    - master
